% Generated by roxygen2 (4.0.2): do not edit by hand
\name{interplot}
\alias{interplot}
\title{INTERPLOT: Plot Interactive Effects}
\usage{
interplot(m, var1, var2, xlab = NULL, ylab = NULL, seed = 313,
  sims = 1000, steps = 100, plot = TRUE)
}
\arguments{
\item{m}{A R object storing the result of a regression including at least one interaction term.}

\item{var1}{The target variable in the interaction term of interest, whose coefficient changes is intended to plot.}

\item{var2}{The changing variable in the interaction term of interest, along with the changes of which the changes of the coefficient of the other variable is shown in the plot.}

\item{xlab}{A title for the x axis.}

\item{ylab}{A title for the y axis.}

\item{seed}{An arbitrary numeric value.}

\item{sims}{Number of independent simulation draws to create.}

\item{steps}{Desired length of the sequence. A non-negative number, which for seq and seq.int will be rounded up if fractional.}

\item{plot}{A logical value to deside the output is a plot or a list of the coefficient, upper and lower bound of var2.}
}
\description{
interplot is the basic plotting function in the interplot package. It is a convenient function for creating graphs describing how the coefficient of one variable in a two-way interaction term will change along with the changes of the other variable.
}
\examples{
# Create continuous, dummy, and group level variables.
group<-seq(1, 50, 1)
z<-rnorm(50, 1, 1)
u<-rnorm(50, 0, 3)

df<-data.frame(group=rep(group, 50), z=rep(z,50), u=rep(u,50))

df$x<-rnorm(2500, 3, 1)+0.1*(group-1)

df$d<-rbinom(2500, 1, 0.2)
df$e<-rnorm(2500, 0, 2)
df$y<-2-df$x+0.5*df$z+df$u+df$e

# Apply the interplot to different regressions
library(Interplot)

## 1. OLS
m1<-lm(y~x+d+z+x:z)
interplot(m1, "x", "z")

## 2. Logit with two interaction terms (the second term is of interest)
m2<-glm(d~y+x+z+x:z+y:z, family=binomial(link="logit"))
interplot(m2, "y", "z")

## 3. Multilevel
m3<-lmer(y~x+d+z+x:z+(1|m))
interplot(m3, "x","z")
}

